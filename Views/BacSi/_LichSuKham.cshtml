@model IPagedList<PhieuKham>

@using HospitalManagement.Models.SearchModel
@using X.PagedList.Mvc.Core;


@using X.PagedList;
@using X.PagedList.Web.Common
<div id="list">

    <div style="min-height:400px">
        <table class="table table-bordered text-center" style="width:100%">
            <tr id="table-header" class="text-light">
                <th style="text-align: left;">Tên Bệnh nhân</th>
                <th>Ngày Khám</th>
                <th>Số điện thoại</th>
                <th>Thao tác</th>
            </tr>
            @if ((ViewBag.Names as IEnumerable<PhieuKham>).Count() > 0)
            {
                @foreach (var item in (ViewBag.Names as IEnumerable<PhieuKham>).OrderByDescending(x => x.NgayKham))
                {
                    <tr>
                        <td style="text-align: left;">@item.MaBNNavigation.HoTen</td>
                        <td>@item.NgayKham.ToString("dd/MM/yyyy")</td>
                        <td>@item.MaBNNavigation.SDT</td>
                        <td class=" text-nowrap"><a class="btn btn-info btn-sm active" onclick="_Detail('@item.MaPK')" title="Thông tin" style="width: 30px;"> <i class="fa fa-info-circle" aria-hidden="true"></i>&nbsp;</a></td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="4" class="text-center">Không có dữ liệu</td>
                </tr>
            }

        </table>
    </div>


    <div style="float:right">

        @{
            var pageRender = new PagedListRenderOptions
            {
                MaximumPageNumbersToDisplay = 5,
                DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
                DisplayLinkToFirstPage = PagedListDisplayMode.Never,
                DisplayLinkToLastPage = PagedListDisplayMode.Never,
                DisplayLinkToNextPage = PagedListDisplayMode.Always,
                DisplayPageCountAndCurrentLocation = false,
                UlElementClasses = new[] { "pagination" },
                LiElementClasses = new string[] { "page-item" },
                PageClasses = new string[] { "page-link" },


                ContainerDivClasses = new[] { "pagination-container" }


            };
        }
        @{
            var searchModel = ViewBag.Data as PhieuKhamSearchModel;
        }


        @Html.PagedListPager((IPagedList<PhieuKham>)ViewBag.Names, page => Url.Action("PagePhieuKham", new { page, MaBS = searchModel.MaBS, KeywordSearch = searchModel.KeywordSearch }), PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(pageRender, new AjaxOptions() { HttpMethod = "GET", UpdateTargetId = "nameListContainer" }))
    </div>

</div>